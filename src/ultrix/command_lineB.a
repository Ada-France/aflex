-- Copyright (c) 1990 Regents of the University of California.  
-- All rights reserved.  
--  
-- This software was developed by John Self of the Arcadia project  
-- at the University of California, Irvine.  
--  
-- Redistribution and use in source and binary forms are permitted  
-- provided that the above copyright notice and this paragraph are  
-- duplicated in all such forms and that any documentation,  
-- advertising materials, and other materials related to such  
-- distribution and use acknowledge that the software was developed  
-- by the University of California, Irvine.  The name of the  
-- University may not be used to endorse or promote products derived  
-- from this software without specific prior written permission.  
-- THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR  
-- IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED  
-- WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.  

-- TITLE command line interface  
-- AUTHOR: John Self (UCI)  
-- DESCRIPTION command line interface body for use with the VERDIX VADS system.  
-- NOTES this file is system dependent  
-- $Header: /co/ua/self/arcadia/aflex/ada/src/RCS/command_lineB.a,v 1.3 90/01/12 15:19:44 self Exp Locker: self $   
-- Modified by S. Bortzmeyer (CNAM). 7/01/1992. DEC Ada version.  

with TSTRING; use TSTRING;   
--/ if DEC then  
with MAIN_PROGRAM_ARGUMENT_LIST;  
--/ elsif Systeam then  
--// with COMMAND_ARGUMENTS;  
--/ else  
--//with A_STRINGS; use A_STRINGS;   
--//with COMMAND_LINE;   
--/ end if;  
package body COMMAND_LINE_INTERFACE is   
  procedure INITIALIZE_COMMAND_LINE is   
  begin  
    --/ if DEC then  
    ARGC := MAIN_PROGRAM_ARGUMENT_LIST.ARGC;  
    for I in 0 .. MAIN_PROGRAM_ARGUMENT_LIST.ARGC - 1 loop  
      ARGV(I) := VSTR(MAIN_PROGRAM_ARGUMENT_LIST.GET_ARG (I));   
    end loop;     
    --/ elsif Systeam then  
--//     ARGC := COMMAND_ARGUMENTS.ARGC;  
--//     for I in 0 .. COMMAND_ARGUMENTS.ARGC - 1 loop  
--//       ARGV(I) := VSTR(COMMAND_ARGUMENTS.ARGV (I));   
--//     end loop;     
    --/ else  
    --//for I in 0 .. COMMAND_LINE.ARGC - 1 loop  
    --//  ARGV(I) := VSTR(COMMAND_LINE.ARGV(I).S);   
    --//end loop;   
    --//ARGC := COMMAND_LINE.ARGC;   
    --/ else  
    --/ end if;  
  end INITIALIZE_COMMAND_LINE;   
end COMMAND_LINE_INTERFACE;   

