private package Parse_Shift_Reduce is

   type Small_Integer is range -32_000 .. 32_000;

   type Shift_Reduce_Entry is record
      T   : Small_Integer;
      Act : Small_Integer;
   end record;
   pragma Pack (Shift_Reduce_Entry);

   type Row is new Integer range -1 .. Integer'Last;

   --  pragma suppress(index_check);

   type Shift_Reduce_Array is array (Row range <>) of Shift_Reduce_Entry;

   Shift_Reduce_Matrix : constant Shift_Reduce_Array :=
      ((-1, -1) --  Dummy Entry

      --  State  0
      , (-1, -2)
      --  State  1
      , (1, 4), (-1, -7)
      --  State  2
      , (0, -3001), (-1, -3000)
      --  State  3
      , (4, 6), (5, 7), (6, 8), (11, 11), (12, 12), (13, 13), (-1, -3000)
      --  State  4
      , (15, 14), (-1, -3000)
      --  State  5
      , (-1, -3000)
      --  State  6
      , (-1, -11)
      --  State  7
      , (-1, -12)
      --  State  8
      , (-1, -13)
      --  State  9
      , (-1, -18)
      --  State  10
      , (7, 16), (-1, -3000)
      --  State  11
      , (7, 17), (-1, -3000)
      --  State  12
      , (7, 18), (-1, -3000)
      --  State  13
      , (8, 19), (-1, -3000)
      --  State  14
      , (-1, -8)
      --  State  15
      , (-1, -19)
      --  State  16
      , (1, 23), (8, 22), (-1, -3000)
      --  State  17
      , (8, 24), (14, 25), (-1, -3000)
      --  State  18
      , (8, 24), (14, 25), (-1, -3000)
      --  State  19
      , (15, 28), (-1, -3000)
      --  State  20
      , (1, 33), (2, 43), (9, 40), (10, 32), (16, 30), (17, 34), (28, 38)
      , (29, 41), (30, 42), (32, 44), (-1, -1)
      --  State  21
      , (7, 47), (15, 46), (-1, -3000)
      --  State  22
      , (-1, -15)
      --  State  23
      , (-1, -16)
      --  State  24
      , (-1, -9)
      --  State  25
      , (-1, -10)
      --  State  26
      , (15, 48), (-1, -3000)
      --  State  27
      , (15, 49), (-1, -3000)
      --  State  28
      , (-1, -6)
      --  State  29
      , (2, 43), (9, 40), (10, 52), (16, 51), (28, 38), (29, 41), (30, 42)
      , (32, 44), (-1, -3000)
      --  State  30
      , (2, 43), (9, 40), (28, 38), (29, 41), (30, 42), (32, 44), (-1, -3000)
      --  State  31
      , (20, 54), (21, 56), (22, 57), (-1, -32)
      --  State  32
      , (-1, -25)
      --  State  33
      , (-1, -26)
      --  State  34
      , (1, 60), (8, 59), (-1, -3000)
      --  State  35
      , (2, 43), (9, 40), (28, 38), (29, 41), (30, 42), (32, 44), (-1, -3000)
      --  State  36
      , (2, 43), (9, 40), (28, 38), (29, 41), (30, 42), (32, 44), (-1, -35)
      --  State  37
      , (23, 63), (24, 64), (25, 65), (26, 66), (-1, -38)
      --  State  38
      , (-1, -45)
      --  State  39
      , (-1, -46)
      --  State  40
      , (-1, -47)
      --  State  41
      , (-1, -57)
      --  State  42
      , (2, 43), (9, 40), (28, 38), (29, 41), (30, 42), (32, 44), (-1, -3000)
      --  State  43
      , (-1, -50)
      --  State  44
      , (16, 70), (-1, -55)
      --  State  45
      , (15, 71), (-1, -3000)
      --  State  46
      , (-1, -3)
      --  State  47
      , (8, 72), (-1, -3000)
      --  State  48
      , (-1, -4)
      --  State  49
      , (-1, -5)
      --  State  50
      , (20, 54), (21, 56), (22, 57), (-1, -32)
      --  State  51
      , (2, 43), (9, 40), (28, 38), (29, 41), (30, 42), (32, 44), (-1, -3000)
      --  State  52
      , (-1, -24)
      --  State  53
      , (20, 54), (21, 56), (22, 57), (-1, -32)
      --  State  54
      , (-1, -31)
      --  State  55
      , (-1, -23)
      --  State  56
      , (2, 43), (9, 40), (28, 38), (29, 41), (30, 42), (32, 44), (-1, -3000)
      --  State  57
      , (-1, -36)
      --  State  58
      , (18, 77), (19, 78), (-1, -3000)
      --  State  59
      , (-1, -29)
      --  State  60
      , (-1, -30)
      --  State  61
      , (2, 43), (9, 40), (28, 38), (29, 41), (30, 42), (32, 44), (-1, -34)
      --  State  62
      , (23, 63), (24, 64), (25, 65), (26, 66), (-1, -37)
      --  State  63
      , (-1, -39)
      --  State  64
      , (-1, -40)
      --  State  65
      , (-1, -41)
      --  State  66
      , (3, 79), (-1, -3000)
      --  State  67
      , (2, 81), (29, 80), (-1, -3000)
      --  State  68
      , (21, 56), (22, 57), (31, 82), (-1, -3000)
      --  State  69
      , (2, 84), (33, 83), (-1, -3000)
      --  State  70
      , (-1, -55)
      --  State  71
      , (-1, -17)
      --  State  72
      , (-1, -14)
      --  State  73
      , (-1, -21)
      --  State  74
      , (20, 54), (21, 56), (22, 57), (-1, -32)
      --  State  75
      , (-1, -22)
      --  State  76
      , (2, 43), (9, 40), (28, 38), (29, 41), (30, 42), (32, 44), (-1, -33)
      --  State  77
      , (-1, -27)
      --  State  78
      , (8, 87), (-1, -3000)
      --  State  79
      , (19, 88), (27, 89), (-1, -3000)
      --  State  80
      , (-1, -48)
      --  State  81
      , (-1, -56)
      --  State  82
      , (-1, -49)
      --  State  83
      , (-1, -51)
      --  State  84
      , (34, 90), (-1, -54)
      --  State  85
      , (2, 84), (33, 91), (-1, -3000)
      --  State  86
      , (-1, -20)
      --  State  87
      , (-1, -28)
      --  State  88
      , (3, 92), (27, 93), (-1, -3000)
      --  State  89
      , (-1, -44)
      --  State  90
      , (2, 94), (-1, -3000)
      --  State  91
      , (-1, -52)
      --  State  92
      , (27, 95), (-1, -3000)
      --  State  93
      , (-1, -43)
      --  State  94
      , (-1, -53)
      --  State  95
      , (-1, -42)
      );

   --  The offset vector
   Shift_Reduce_Offset : constant array (0 .. 95) of Row :=
      (0,
       1, 3, 5, 12, 14, 15, 16, 17, 18, 19,
       21, 23, 25, 27, 28, 29, 32, 35, 38, 40,
       51, 54, 55, 56, 57, 58, 60, 62, 63, 72,
       79, 83, 84, 85, 88, 95, 102, 107, 108, 109,
       110, 111, 118, 119, 121, 123, 124, 126, 127, 128,
       132, 139, 140, 144, 145, 146, 153, 154, 157, 158,
       159, 166, 171, 172, 173, 174, 176, 179, 183, 186,
       187, 188, 189, 190, 194, 195, 202, 203, 205, 208,
       209, 210, 211, 212, 214, 217, 218, 219, 222, 223,
       225, 226, 228, 229, 230);

end Parse_Shift_Reduce;
